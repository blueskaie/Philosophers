import java.util.Random;
import java.util.concurrent.locks.Condition;
public class Philosopher implements Runnable{
    private Server myTable;
    private int PhilosopherID;
    public State state;
 
    public Philosopher (Server table, int ID){
        myTable=table;
        PhilosopherID=ID;
    }
    
    public void run(){
        while (true){
            state=State.THINKING;
            displayState("THINKING");
            Delay();
            state=State.HUNGRY;
            displayState("HUNGRY");
            myTable.takeChopsticks(PhilosopherID);
            displayState("EATING");
            myTable.returnChopsticks(PhilosopherID);
        }
    }
    
    public void displayState(String msg) {
    	System.out.println("Philosopher "+PhilosopherID+" is "+msg);
    }
    public void Delay() {
        try{
            Random wait = new Random();
            int min = 1000, max = 3000; //1 to 3 secs
            int waitNum = wait.nextInt((max - min) + 1) + min;
            Thread.sleep(waitNum);
        }catch (InterruptedException e){}
    }
}
